{"version":3,"file":"static/js/753.e6a64e46.chunk.js","mappings":"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","sources":["assets/data/local_data.ts","views/discover/c-views/recommend/c-cpns/top-banner/style.ts","views/discover/c-views/recommend/c-cpns/top-banner/index.tsx","views/discover/c-views/recommend/style.ts","views/discover/c-views/recommend/c-cpns/hot-recommend/style.ts","components/area-header-v1/style.ts","components/area-header-v1/index.tsx","components/song-menu-item/style.ts","components/song-menu-item/index.tsx","views/discover/c-views/recommend/c-cpns/hot-recommend/index.tsx","views/discover/c-views/recommend/c-cpns/new-album/style.ts","components/new-album-item/sytle.ts","components/new-album-item/index.tsx","views/discover/c-views/recommend/c-cpns/new-album/index.tsx","views/discover/c-views/recommend/c-cpns/top-ranking/style.ts","views/discover/c-views/recommend/c-cpns/top-ranking-item/style.ts","views/discover/c-views/recommend/c-cpns/top-ranking-item/index.tsx","views/discover/c-views/recommend/c-cpns/top-ranking/index.tsx","views/discover/c-views/recommend/c-cpns/user-login/style.ts","views/discover/c-views/recommend/c-cpns/user-login/index.tsx","views/discover/c-views/recommend/c-cpns/settle-singer/style.ts","components/area-header-v2/style.ts","components/area-header-v2/index.tsx","views/discover/c-views/recommend/c-cpns/settle-singer/index.tsx","views/discover/c-views/recommend/c-cpns/hot-anchor/style.ts","views/discover/c-views/recommend/c-cpns/hot-anchor/index.tsx","views/discover/c-views/recommend/index.tsx"],"sourcesContent":["export const footerLinks = [\n  {\n    title: '服务条款',\n    link: 'https://st.music.163.com/official-terms/service'\n  },\n  {\n    title: '隐私政策',\n    link: 'https://st.music.163.com/official-terms/privacy'\n  },\n  {\n    title: '儿童隐私政策',\n    link: 'https://st.music.163.com/official-terms/children'\n  },\n  {\n    title: '版权投诉指引',\n    link: 'https://music.163.com/st/staticdeal/complaints.html'\n  },\n  {\n    title: '意见反馈',\n    link: '#'\n  }\n]\n\nexport const footerImages = [\n  {\n    link: 'https://music.163.com/st/userbasic#/auth'\n  },\n  {\n    link: 'https://music.163.com/recruit'\n  },\n  {\n    link: 'https://music.163.com/web/reward'\n  },\n  {\n    link: 'https://music.163.com/uservideo#/plan'\n  }\n]\n\n// discover中的数据\nexport const discoverMenu = [\n  {\n    title: '推荐',\n    link: '/discover/recommend'\n  },\n  {\n    title: '排行榜',\n    link: '/discover/ranking'\n  },\n  {\n    title: '歌单',\n    link: '/discover/songs'\n  },\n  {\n    title: '主播电台',\n    link: '/discover/djradio'\n  },\n  {\n    title: '歌手',\n    link: '/discover/artist'\n  },\n  {\n    title: '新碟上架',\n    link: '/discover/album'\n  }\n]\n\n// 热门主播\nexport const hotRadios = [\n  {\n    picUrl: 'http://p1.music.126.net/H3QxWdf0eUiwmhJvA4vrMQ==/1407374893913311.jpg',\n    name: '陈立',\n    position: '心理学家、美食家陈立教授',\n    url: '/user/home?id=278438485'\n  },\n  {\n    picUrl: 'http://p1.music.126.net/y5-sM7tjnxnu_V9LWKgZlw==/7942872001461517.jpg',\n    name: 'DJ艳秋',\n    position: '著名音乐节目主持人',\n    url: '/user/home?id=91239965'\n  },\n  {\n    picUrl: 'http://p1.music.126.net/6cc6lgOfQTo6ovNnTHPyJg==/3427177769086282.jpg',\n    name: '国家大剧院古典音乐频道',\n    position: '国家大剧院古典音乐官方',\n    url: '/user/home?id=324314596'\n  },\n  {\n    picUrl: 'http://p1.music.126.net/xa1Uxrrn4J0pm_PJwkGYvw==/3130309604335651.jpg',\n    name: '谢谢收听',\n    position: '南京电台主持人王馨',\n    url: '/user/home?id=1611157'\n  },\n  {\n    picUrl: 'http://p1.music.126.net/slpd09Tf5Ju82Mv-h8MP4w==/3440371884651965.jpg',\n    name: 'DJ晓苏',\n    position: '独立DJ，CRI环球旅游广播特邀DJ',\n    url: '/user/home?id=2313954'\n  }\n]\n\n// 歌手类别\nexport const artistCategories = [\n  {\n    title: '推荐',\n    area: -1,\n    artists: [\n      {\n        name: '推荐歌手',\n        type: 1,\n        url: '/discover/artist',\n        id: 0\n      },\n      {\n        name: '入驻歌手',\n        type: 2,\n        url: '/discover/artist?cat=5001',\n        dataPath: '/artist/list?cat=5001'\n      }\n    ]\n  },\n  {\n    title: '华语',\n    area: 7,\n    artists: [\n      {\n        name: '华语男歌手',\n        url: '/discover/artist?id=1001',\n        type: 1\n      },\n      {\n        name: '华语女歌手',\n        url: '/discover/artist?id=1002',\n        type: 2\n      },\n      {\n        name: '华语组合/乐队',\n        url: '/discover/artist?id=1003',\n        type: 3\n      }\n    ]\n  },\n  {\n    title: '欧美',\n    area: 96,\n    artists: [\n      {\n        name: '欧美男歌手',\n        url: '/discover/artist?id=2001',\n        type: 1\n      },\n      {\n        name: '欧美女歌手',\n        url: '/discover/artist?id=2002',\n        type: 2\n      },\n      {\n        name: '欧美组合乐队',\n        url: '/discover/artist?id=2003',\n        type: 3\n      }\n    ]\n  },\n  {\n    title: '日本',\n    area: 8,\n    artists: [\n      {\n        name: '日本男歌手',\n        url: '/discover/artist?id=6001',\n        type: 1\n      },\n      {\n        name: '日本女歌手',\n        url: '/discover/artist?id=6002',\n        type: 2\n      },\n      {\n        name: '日本组合/乐队',\n        url: '/discover/artist?id=6003',\n        type: 3\n      }\n    ]\n  },\n  {\n    title: '韩国',\n    area: 16,\n    artists: [\n      {\n        name: '韩国男歌手',\n        url: '/discover/artist?id=7001',\n        type: 1\n      },\n      {\n        name: '韩国女歌手',\n        url: '/discover/artist?id=7002',\n        type: 2\n      },\n      {\n        name: '韩国组合/乐队',\n        url: '/discover/artist?id=7003',\n        type: 3\n      }\n    ]\n  },\n  {\n    title: '其他',\n    area: 0,\n    artists: [\n      {\n        name: '其他男歌手',\n        url: '/discover/artist?id=4001',\n        type: 1\n      },\n      {\n        name: '其他女歌手',\n        url: '/discover/artist?id=4002',\n        type: 2\n      },\n      {\n        name: '其他组合乐队',\n        url: '/discover/artist?id=4003',\n        type: 3\n      }\n    ]\n  }\n]\n","import styled from 'styled-components'\n\n// interface BannerProps {\n//   bgImage: string\n// }\n/* export const BannerWrapper = styled.div<BannerProps>` */\n/* background: url(${(props) => props.bgImage}) center center/6000px; */\nexport const BannerWrapper = styled.div`\n  .banner {\n    height: 270px;\n    background-color: red;\n\n    display: flex;\n    position: relative;\n  }\n`\n\nexport const BannerLeft = styled.div`\n  position: relative;\n  width: 730px;\n\n  .banner-item {\n    overflow: hidden;\n    height: 270px;\n    .image {\n      width: 100%;\n    }\n  }\n\n  .dots {\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    margin: 0 auto;\n    display: flex;\n    justify-content: center;\n\n    > li {\n      margin: 0 2px;\n\n      .item {\n        display: inline-block;\n        width: 20px;\n        height: 20px;\n        background: url(${require('@/assets/img/banner_sprite.png')}) 3px -343px;\n        cursor: pointer;\n\n        &:hover,\n        &.active {\n          background-position: -16px -343px;\n        }\n      }\n    }\n  }\n`\n\nexport const BannerRight = styled.a.attrs({\n  href: 'https://music.163.com/#/download',\n  target: '_blank'\n})`\n  width: 254px;\n  height: 270px;\n  background: url(${require('@/assets/img/download.png')});\n`\n\nexport const BannerControl = styled.div`\n  position: absolute;\n  left: 0;\n  right: 0;\n  top: 50%;\n  transform: translateY(-50%);\n  height: 63px;\n\n  .btn {\n    position: absolute;\n    width: 37px;\n    height: 63px;\n    background-image: url(${require('@/assets/img/banner_sprite.png')});\n    background-color: transparent;\n    cursor: pointer;\n\n    &:hover {\n      background-color: rgba(0, 0, 0, 0.1);\n    }\n  }\n\n  .left {\n    left: -68px;\n    background-position: 0 -360px;\n  }\n\n  .right {\n    right: -68px;\n    background-position: 0 -508px;\n  }\n`\n","import React, { memo, useRef, useState } from 'react'\nimport type { ElementRef, FC, ReactNode } from 'react'\nimport { Carousel } from 'antd'\nimport classNames from 'classnames'\n\nimport { shallowEqualApp, useAppSelector } from '@/store'\nimport { BannerControl, BannerLeft, BannerRight, BannerWrapper } from './style'\n\ninterface IProps {\n  children?: ReactNode\n}\n\nconst TopBanner: FC<IProps> = () => {\n  /**获取当前高亮的图片index */\n  const [currentIndex, setCurrentIndex] = useState(0)\n  /**定义内部的数据  */\n  const bannerRef = useRef<ElementRef<typeof Carousel>>(null)\n  /**从 store 中获取数据 */\n  const { banners } = useAppSelector(\n    (state) => ({\n      banners: state.recommend.banners\n    }),\n    shallowEqualApp\n  )\n\n  const handleBeforeChange = () => {\n    // setCurrentIndex(-1)\n  }\n  const handleAfterChange = (current: number) => {\n    setCurrentIndex(current)\n  }\n  const handlePrevClick = () => {\n    bannerRef.current?.prev()\n  }\n  const handleNextClick = () => {\n    bannerRef.current?.next()\n  }\n\n  /**获取背景图片 */\n  let bgImageUrl\n  if (currentIndex >= 0 && banners?.length > 0) {\n    bgImageUrl = banners[currentIndex].imageUrl + '?imageView&blur=40x20'\n  }\n\n  return (\n    /**bgImageUrl={bgImageUrl} */\n    <BannerWrapper\n      style={{\n        background: `url('${bgImageUrl}') center center / 6000px`\n      }}\n    >\n      <div className=\"banner wrap-v2\">\n        <BannerLeft>\n          <Carousel\n            dots={false}\n            autoplay\n            ref={bannerRef}\n            beforeChange={handleBeforeChange}\n            afterChange={handleAfterChange}\n          >\n            {banners.map((item: any) => {\n              return (\n                <div className=\"banner-item\" key={item.imageUrl}>\n                  <img className=\"image\" src={item.imageUrl} alt={item.typeTitle} />\n                </div>\n              )\n            })}\n          </Carousel>\n          <ul className=\"dots\">\n            {banners.map((item, index) => {\n              return (\n                <li key={item.imageUrl}>\n                  <span\n                    className={classNames('item', {\n                      active: currentIndex === index\n                    })}\n                  ></span>\n                </li>\n              )\n            })}\n          </ul>\n        </BannerLeft>\n        <BannerRight></BannerRight>\n        <BannerControl>\n          <button className=\"btn left\" onClick={handlePrevClick}></button>\n          <button className=\"btn right\" onClick={handleNextClick}></button>\n        </BannerControl>\n      </div>\n    </BannerWrapper>\n  )\n}\n\nexport default memo(TopBanner)\n","import styled from 'styled-components'\n\nexport const RecommendWrapper = styled.div`\n  > .content {\n    border: 1px solid #d3d3d3;\n    background-image: url(${require('@/assets/img/wrap-bg.png')});\n    display: flex;\n\n    > .left {\n      padding: 20px;\n      width: 729px;\n      box-sizing: border-box;\n    }\n\n    > .right {\n      margin-left: 1px;\n      width: 250px;\n    }\n  }\n`\n","import styled from 'styled-components'\n\nexport const RecommendWrapper = styled.div`\n  .recommend-list {\n    display: flex;\n    justify-content: space-between;\n    flex-wrap: wrap;\n  }\n`\n","import styled from 'styled-components'\n\nexport const HeaderV1Wrapper = styled.div`\n  height: 33px;\n  border-bottom: 2px solid #c10d0c;\n  padding: 0 10px 4px 34px;\n  background-position: -225px -156px;\n\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  .left {\n    display: flex;\n    align-items: center;\n\n    .title {\n      font-size: 20px;\n      font-family: 'Microsoft Yahei', Arial, Helvetica, sans-serif;\n      margin-right: 20px;\n    }\n\n    .keywords {\n      display: flex;\n      align-items: center;\n\n      .item {\n        position: relative;\n        top: 2px;\n\n        .link {\n          &:hover {\n            cursor: pointer;\n            text-decoration: underline;\n          }\n        }\n\n        .divider {\n          margin: 0 15px;\n          color: #ccc;\n        }\n\n        &:last-child {\n          .divider {\n            display: none;\n          }\n        }\n      }\n    }\n  }\n\n  .right {\n    display: flex;\n    align-items: center;\n\n    .more {\n      &:hover {\n        color: #333;\n        text-decoration: underline;\n      }\n    }\n    .icon {\n      display: inline-block;\n      width: 12px;\n      height: 12px;\n      margin-left: 4px;\n      background-position: 0 -240px;\n    }\n  }\n`\n","import React, { memo } from 'react'\nimport type { FC, ReactNode } from 'react'\nimport { HeaderV1Wrapper } from './style'\nimport { Link } from 'react-router-dom'\n\ninterface IProps {\n  children?: ReactNode\n  title?: string\n  keywords?: string[]\n  moreText?: string\n  moreLink?: string\n}\n\nconst AreaHeaderV1: FC<IProps> = (props) => {\n  const { title = '默认标题', keywords = [], moreText = '更多', moreLink = '/' } = props\n\n  return (\n    <HeaderV1Wrapper className=\" sprite_02\">\n      <div className=\"left\">\n        <h3 className=\"title\">{title}</h3>\n        <div className=\"keywords\">\n          {keywords.map((item) => (\n            <div className=\"item\" key={item}>\n              <span className=\"link\">{item}</span>\n              <span className=\"divider\">|</span>\n            </div>\n          ))}\n        </div>\n      </div>\n      <div className=\"right\">\n        <Link className=\"more\" to={moreLink}>\n          {moreText}\n        </Link>\n        <i className=\"icon sprite_02\"></i>\n      </div>\n    </HeaderV1Wrapper>\n  )\n}\n\nexport default memo(AreaHeaderV1)\n","import styled from 'styled-components'\n\nexport const MenuItemWrapper = styled.div`\n  width: 140px;\n  margin: 15px 0;\n\n  .top {\n    position: relative;\n\n    & > img {\n      width: 140px;\n      height: 140px;\n    }\n\n    .cover {\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      background-position: 0 0;\n\n      .info {\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n        padding: 0 10px;\n        position: absolute;\n        bottom: 0;\n        left: 0;\n        right: 0;\n        background-position: 0 -537px;\n        color: #ccc;\n        height: 27px;\n\n        .headset {\n          margin-right: 5px;\n          display: inline-block;\n          width: 14px;\n          height: 11px;\n          background-position: 0 -24px;\n        }\n\n        .play {\n          display: inline-block;\n          width: 16px;\n          height: 17px;\n          background-position: 0 0;\n        }\n      }\n    }\n  }\n\n  .bottom {\n    font-size: 14px;\n    color: #000;\n    margin-top: 5px;\n  }\n`\n","import React, { memo } from 'react'\nimport type { FC, ReactNode } from 'react'\nimport { MenuItemWrapper } from './style'\nimport { formatCount, getImageSize } from '@/utils/format'\n\ninterface ISongItem {\n  id: number\n  type: number\n  name: string\n  copywriter: string\n  picUrl: string\n  canDislike: boolean\n  trackNumberUpdateTime: number\n  playCount: number\n  trackCount: number\n  highQuality: boolean\n  alg: string\n}\n\ninterface IProps {\n  children?: ReactNode\n  itemData: ISongItem\n}\n\nconst SongMenuItem: FC<IProps> = (props) => {\n  const { itemData } = props\n  return (\n    <MenuItemWrapper>\n      <div className=\"top\">\n        <img src={getImageSize(itemData.picUrl, 140)} alt=\"\" />\n        <div className=\"cover sprite_cover\">\n          <div className=\"info sprite_cover\">\n            <span>\n              <i className=\"sprite_icon headset\"></i>\n              <span className=\"count\">{formatCount(itemData.playCount)}</span>\n            </span>\n            <i className=\"sprite_icon play\"></i>\n          </div>\n        </div>\n      </div>\n      <div className=\"bottom\">{itemData.name}</div>\n    </MenuItemWrapper>\n  )\n}\n\nexport default memo(SongMenuItem)\n","import React, { memo } from 'react'\nimport type { FC, ReactNode } from 'react'\nimport { RecommendWrapper } from './style'\nimport AreaHeaderV1 from '@/components/area-header-v1'\nimport { useAppSelector } from '@/store'\nimport SongMenuItem from '@/components/song-menu-item'\n\ninterface IProps {\n  children?: ReactNode\n}\n\nconst HotRecommend: FC<IProps> = () => {\n  const { hotRecommends } = useAppSelector((state) => ({\n    hotRecommends: state.recommend.hotRecommends\n  }))\n  return (\n    <RecommendWrapper>\n      <AreaHeaderV1\n        title=\"热门推荐\"\n        keywords={['华语', '流行', '摇滚', '民谣', '电子']}\n        moreLink=\"/discover/songs\"\n      />\n\n      <div className=\"recommend-list\">\n        {hotRecommends.map((item) => (\n          <SongMenuItem key={item.id} itemData={item} />\n        ))}\n      </div>\n    </RecommendWrapper>\n  )\n}\n\nexport default memo(HotRecommend)\n","import styled from 'styled-components'\n\nexport const AlbumWrapper = styled.div`\n  margin-top: 50px;\n\n  > .content {\n    height: 186px;\n    background-color: #f5f5f5;\n    border: 1px solid #d3d3d3;\n    margin: 20px 0 37px;\n    padding: 0 5px;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n\n    .arrow {\n      width: 17px;\n      height: 17px;\n      cursor: pointer;\n    }\n\n    .arrow-left {\n      background-position: -260px -75px;\n      &:hover {\n        background-position: -280px -75px;\n      }\n    }\n\n    .arrow-right {\n      background-position: -300px -75px;\n      &:hover {\n        background-position: -320px -75px;\n      }\n    }\n\n    .banner {\n      overflow: hidden;\n      flex: 1;\n\n      .album-list {\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n      }\n    }\n  }\n\n  .album {\n    width: 640px;\n    height: 150px;\n\n    .ant-carousel .slick-slide {\n      height: 150px;\n      overflow: hidden;\n    }\n\n    .page {\n      display: flex !important;\n      justify-content: space-between;\n      align-items: center;\n    }\n  }\n`\n","import styled from 'styled-components'\n\nexport const AlbumItemWrapper = styled.div`\n  .top {\n    position: relative;\n    width: 118px;\n    height: 100px;\n    overflow: hidden;\n    margin-top: 15px;\n\n    img {\n      width: 100px;\n      height: 100px;\n    }\n\n    .cover {\n      position: absolute;\n      left: 0;\n      right: 0;\n      top: 0;\n      bottom: 0;\n      background-position: 0 -570px;\n      text-indent: -9999px;\n    }\n  }\n\n  .album-info {\n    font-size: 12px;\n    width: 100px;\n    .name {\n      color: #000;\n      ${(props) => props.theme.mixin.textNoWrap}\n    }\n\n    .artist {\n      color: #666;\n      ${(props) => props.theme.mixin.textNoWrap}\n    }\n  }\n`\n","import React, { memo } from 'react'\nimport type { FC, ReactNode } from 'react'\nimport { AlbumItemWrapper } from './sytle'\n\nimport { getImageSize } from '@/utils/format'\ninterface IAlbumItem {\n  name: string\n  id: number\n  picId: number\n  blurPicUrl: string\n  companyId: number\n  pic: number\n  picUrl: string\n  publishTime: number\n  briefDesc: string\n  artist: { name: string; id: number }\n}\n\ninterface IProps {\n  children?: ReactNode\n  itemData: IAlbumItem\n}\n\nconst NewAlbumItem: FC<IProps> = (props) => {\n  const { itemData } = props\n  return (\n    <AlbumItemWrapper>\n      <div className=\"top\">\n        <img src={getImageSize(itemData.picUrl, 100)} alt=\"\" />\n        <a href=\"\" className=\"cover sprite_cover\"></a>\n      </div>\n      <div className=\"bottom\">\n        <div className=\"name\">{itemData.name}</div>\n        <div className=\"artist\">{itemData.artist.name}</div>\n      </div>\n    </AlbumItemWrapper>\n  )\n}\n\nexport default memo(NewAlbumItem)\n","import React, { ElementRef, memo } from 'react'\nimport type { FC, ReactNode } from 'react'\nimport { AlbumWrapper } from './style'\nimport AreaHeaderV1 from '@/components/area-header-v1'\nimport { Carousel } from 'antd'\nimport { useRef } from 'react'\nimport { shallowEqualApp, useAppSelector } from '@/store'\nimport NewAlbumItem from '@/components/new-album-item'\n\ninterface IProps {\n  children?: ReactNode\n}\n\nconst NewAlbum: FC<IProps> = () => {\n  // 定义内部数据\n  const bannerRef = useRef<ElementRef<typeof Carousel>>(null)\n\n  // 从 redux 中获取数据\n  const { newAlbums } = useAppSelector(\n    (state) => ({\n      newAlbums: state.recommend.newAlbums\n    }),\n    shallowEqualApp\n  )\n  // console.log(newAlbums)\n\n  // 事件处理的函数\n  const handlePrevClick = () => {\n    bannerRef.current?.prev()\n  }\n  const handleNextClick = () => {\n    bannerRef.current?.next()\n  }\n  return (\n    <AlbumWrapper>\n      <AreaHeaderV1 title=\"新碟上架\" moreLink=\"/discover/album\" />\n      <div className=\"content\">\n        <button className=\"sprite_02 arrow arrow-left\" onClick={handlePrevClick}></button>\n        <div className=\"banner\">\n          <Carousel speed={1500} dots={false} ref={bannerRef}>\n            {[0, 1].map((item) => (\n              <div key={item}>\n                <div className=\"album-list\">\n                  {newAlbums.slice(item * 5, (item + 1) * 5).map((album) => (\n                    <NewAlbumItem key={album.id} itemData={album} />\n                  ))}\n                </div>\n              </div>\n            ))}\n          </Carousel>\n        </div>\n        <button className=\"sprite_02 arrow arrow-right\" onClick={handleNextClick}></button>\n      </div>\n    </AlbumWrapper>\n  )\n}\n\nexport default memo(NewAlbum)\n","import styled from 'styled-components'\n\nexport const RankingWrapper = styled.div`\n  .content {\n    display: flex;\n    height: 472px;\n    margin-top: 20px;\n    background: url(${require('@/assets/img/recommend-top-bg.png')});\n  }\n`\n","import styled from 'styled-components'\n\nexport const RankingItemWrapper = styled.div`\n  width: 230px;\n  &:last-child {\n    width: 228px;\n  }\n\n  .header {\n    height: 100px;\n    display: flex;\n\n    margin: 20px 0 0 20px;\n\n    .image {\n      width: 80px;\n      height: 80px;\n      position: relative;\n\n      img {\n        width: 80px;\n        height: 80px;\n      }\n    }\n\n    .info {\n      margin: 5px 0 0 10px;\n\n      .name {\n        font-size: 14px;\n        font-weight: 700;\n        color: #333;\n      }\n\n      a {\n        font-size: 14px;\n        color: #333;\n        font-weight: 700;\n      }\n\n      .btn {\n        display: inline-block;\n        text-indent: -9999px;\n        width: 22px;\n        height: 22px;\n        margin: 8px 10px 0 0;\n        cursor: pointer;\n      }\n\n      .play {\n        background-position: -267px -205px;\n\n        &:hover {\n          background-position: -267px -235px;\n        }\n      }\n\n      .favor {\n        background-position: -300px -205px;\n\n        &:hover {\n          background-position: -300px -235px;\n        }\n      }\n    }\n  }\n\n  .list {\n    .item {\n      position: relative;\n      display: flex;\n      align-items: center;\n      height: 32px;\n\n      :nth-child(-n + 3) .rank {\n        color: #c10d0c;\n      }\n\n      .rank {\n        width: 35px;\n        text-align: center;\n        margin-left: 10px;\n        font-size: 16px;\n      }\n\n      .info {\n        color: #000;\n        width: 170px;\n        height: 17px;\n        line-height: 17px;\n        display: flex;\n        justify-content: space-between;\n\n        .name {\n          flex: 1;\n\n          white-space: nowrap;\n          text-overflow: ellipsis;\n          overflow: hidden;\n          cursor: pointer;\n\n          &:hover {\n            text-decoration: underline;\n          }\n        }\n\n        .operator {\n          display: flex;\n          align-items: center;\n          display: none;\n          width: 82px;\n\n          .btn {\n            width: 17px;\n            height: 17px;\n            margin-left: 8px;\n            cursor: pointer;\n          }\n\n          .play {\n            background-position: -267px -268px;\n          }\n\n          .add {\n            position: relative;\n            top: 2px;\n            background-position: 0 -700px;\n          }\n\n          .favor {\n            background-position: -297px -268px;\n          }\n        }\n      }\n\n      &:hover {\n        .operator {\n          display: block;\n        }\n      }\n    }\n  }\n\n  .footer {\n    display: flex;\n    align-items: center;\n    justify-content: flex-end;\n    height: 32px;\n    padding-right: 20px;\n  }\n`\n","import React, { memo } from 'react'\nimport type { FC, ReactNode } from 'react'\nimport { RankingItemWrapper } from './style'\nimport { getImageSize } from '@/utils/format'\nimport { useAppDispatch } from '@/store'\nimport { fetchCurrentSongAction } from '@/views/player/store/player'\n\ninterface IProps {\n  children?: ReactNode\n  itemData: any\n}\n\nconst TopRankingItem: FC<IProps> = (props) => {\n  const { itemData } = props\n  const { tracks = [] } = itemData\n\n  const dispatch = useAppDispatch()\n  function handlePlayClick(id: number) {\n    dispatch(fetchCurrentSongAction(id))\n  }\n\n  return (\n    <RankingItemWrapper>\n      <div className=\"header\">\n        <div className=\"image\">\n          <img src={getImageSize(itemData.coverImgUrl, 80)} alt=\"\" />\n          <a href=\"\" className=\"sprite_cover\"></a>\n        </div>\n        <div className=\"info\">\n          <div className=\"name\">{itemData.name}</div>\n          <div>\n            <button className=\"sprite_02 btn play\"></button>\n            <button className=\"sprite_02 btn favor\"></button>\n          </div>\n        </div>\n      </div>\n      <div className=\"list\">\n        {tracks.slice(0, 10).map((item: any, index: number) => {\n          return (\n            <div className=\"item\" key={item.id}>\n              <div className=\"rank\">{index + 1}</div>\n              <div className=\"info\">\n                <div className=\"name\">{item.name}</div>\n                <div className=\"operator\">\n                  <button\n                    className=\"btn sprite_02 play\"\n                    onClick={() => handlePlayClick(item.id)}\n                  ></button>\n                  <button className=\"btn sprite_icon2 add\"></button>\n                  <button className=\"btn sprite_02 favor\"></button>\n                </div>\n              </div>\n            </div>\n          )\n        })}\n      </div>\n      <div className=\"footer\">\n        <a href=\"#/discover/ranking\">查看更多&gt;</a>\n      </div>\n    </RankingItemWrapper>\n  )\n}\n\nexport default memo(TopRankingItem)\n","import React, { memo } from 'react'\nimport type { FC, ReactNode } from 'react'\nimport { RankingWrapper } from './style'\nimport AreaHeaderV1 from '@/components/area-header-v1'\nimport { shallowEqualApp, useAppSelector } from '@/store'\nimport TopRankingItem from '../top-ranking-item'\n\ninterface IProps {\n  children?: ReactNode\n}\n\nconst TopRanking: FC<IProps> = () => {\n  const { rankings = [] } = useAppSelector(\n    (state) => ({\n      rankings: state.recommend.rankings\n    }),\n    shallowEqualApp\n  )\n  return (\n    <RankingWrapper>\n      <AreaHeaderV1 title=\"榜单\" moreLink=\"/discover/ranking\" />\n      <div className=\"content\">\n        {rankings.map((item) => (\n          <TopRankingItem key={item.id} itemData={item} />\n        ))}\n      </div>\n    </RankingWrapper>\n  )\n}\n\nexport default memo(TopRanking)\n","import styled from 'styled-components'\n\nexport const LoginWrapper = styled.div`\n  height: 126px;\n  background-position: 0 0;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  p {\n    margin: 16px 22px 0;\n    line-height: 25px;\n  }\n\n  a {\n    margin-top: 10px;\n    display: inline-block;\n    width: 100px;\n    height: 31px;\n    line-height: 31px;\n    text-align: center;\n    color: #fff;\n    text-decoration: none;\n    background-position: 0 -195px;\n    text-shadow: 0 1px 0 #8a060b;\n\n    :hover {\n      background-position: -110px -195px;\n    }\n  }\n`\n","import React, { memo } from 'react'\nimport type { FC, ReactNode } from 'react'\nimport { LoginWrapper } from './style'\n\ninterface IProps {\n  children?: ReactNode\n}\n\nconst UserLogin: FC<IProps> = () => {\n  return (\n    <LoginWrapper className=\"sprite_02\">\n      <p>登录网易云音乐，可以享受无限收藏的乐趣，并且无限同步到手机</p>\n      <a href=\"#/login\" className=\"sprite_02\">\n        用户登录\n      </a>\n    </LoginWrapper>\n  )\n}\n\nexport default memo(UserLogin)\n","import styled from 'styled-components'\n\nexport const SingerWrapper = styled.div`\n  padding: 20px;\n\n  .artists {\n    .item {\n      display: flex;\n      height: 62px;\n      margin-top: 14px;\n      background-color: #fafafa;\n      text-decoration: none;\n\n      :hover {\n        background-color: #f4f4f4;\n      }\n\n      img {\n        width: 62px;\n        height: 62px;\n      }\n\n      .info {\n        flex: 1;\n        display: flex;\n        flex-direction: column;\n        justify-content: space-around;\n        padding: 3px 12px;\n        border: 1px solid #e9e9e9;\n        border-left: none;\n        overflow: hidden;\n\n        .name {\n          font-size: 14px;\n          font-weight: 700;\n          color: #000;\n        }\n\n        .alias {\n          font-size: 12px;\n          color: #666;\n          white-space: nowrap;\n          text-overflow: ellipsis;\n          overflow: hidden;\n        }\n      }\n    }\n  }\n\n  .apply-for {\n    margin-top: 12px;\n    a {\n      color: #333;\n      font-weight: 700;\n      text-align: center;\n      display: block;\n      height: 31px;\n      line-height: 31px;\n      border-radius: 4px;\n      background-color: #fafafa;\n      border: 1px solid #c3c3c3;\n      text-decoration: none;\n    }\n  }\n`\n","import styled from 'styled-components'\n\nexport const HeaderV2Wrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-end;\n  padding-bottom: 5px;\n  border-bottom: 1px solid #ccc;\n\n  h3 {\n    font-size: 12px;\n    font-weight: 700;\n  }\n`\n","import React, { memo } from 'react'\nimport type { FC, ReactNode } from 'react'\nimport { HeaderV2Wrapper } from './style'\n\ninterface IProps {\n  children?: ReactNode\n  title?: string\n  moreText?: string\n  moreLink?: string\n}\n\nconst AreaHeaderV2: FC<IProps> = (props) => {\n  const { title = '默认标题', moreText, moreLink } = props\n  return (\n    <HeaderV2Wrapper>\n      <h3 className=\"title\">{title}</h3>\n      {moreText && moreLink && <a href={moreLink}>查看全部 &gt;</a>}\n    </HeaderV2Wrapper>\n  )\n}\n\nexport default memo(AreaHeaderV2)\n","import React, { memo } from 'react'\nimport type { FC, ReactNode } from 'react'\nimport { SingerWrapper } from './style'\nimport AreaHeaderV2 from '@/components/area-header-v2'\nimport { useAppSelector } from '@/store'\nimport { getImageSize } from '@/utils/format'\n\ninterface IProps {\n  children?: ReactNode\n}\n\nconst SettleSinger: FC<IProps> = () => {\n  const { settleSingers } = useAppSelector((state) => ({\n    settleSingers: state.recommend.settleSingers\n  }))\n  return (\n    <SingerWrapper>\n      <AreaHeaderV2 title=\"入驻歌手\" moreText=\"查看全部 &gt;\" moreLink=\"#/discover/artist\" />\n      <div className=\"artists\">\n        {settleSingers.map((item) => (\n          <a href=\"#/discover/artist\" className=\"item\" key={item.id}>\n            <img src={getImageSize(item.picUrl, 62)} alt=\"\" />\n            <div className=\"info\">\n              <div className=\"name\">{item.name}</div>\n              <div className=\"alias\">{item.alias.join(' ')}</div>\n            </div>\n          </a>\n        ))}\n      </div>\n      <div className=\"apply-for\">\n        <a href=\"\">申请成为网易音乐人</a>\n      </div>\n    </SingerWrapper>\n  )\n}\n\nexport default memo(SettleSinger)\n","import styled from 'styled-components'\n\nexport const AnchorWrapper = styled.div`\n  padding: 20px;\n\n  .anchors {\n    margin-top: 20px;\n\n    .item {\n      display: flex;\n      margin-bottom: 10px;\n      width: 210px;\n      .image {\n        img {\n          width: 40px;\n          height: 40px;\n        }\n      }\n\n      .info {\n        width: 160px;\n        margin-left: 8px;\n        .name {\n          color: #000;\n          font-weight: 700;\n          margin-top: 3px;\n        }\n\n        .position {\n          color: #666;\n\n          white-space: nowrap;\n          text-overflow: ellipsis;\n          overflow: hidden;\n        }\n      }\n    }\n  }\n`\n","import React, { memo } from 'react'\nimport type { FC, ReactNode } from 'react'\nimport { AnchorWrapper } from './style'\nimport AreaHeaderV2 from '@/components/area-header-v2'\nimport { hotRadios } from '@/assets/data/local_data'\n\ninterface IProps {\n  children?: ReactNode\n}\n\nconst HotAnchor: FC<IProps> = () => {\n  return (\n    <AnchorWrapper>\n      <AreaHeaderV2 title=\"热门主播\" />\n      <div className=\"anchors\">\n        {hotRadios.map((item) => {\n          return (\n            <div className=\"item\" key={item.picUrl}>\n              <a href=\"/discover/djradio\" className=\"image\">\n                <img src={item.picUrl} alt=\"\" />\n              </a>\n              <div className=\"info\">\n                <div className=\"name\">{item.name}</div>\n                <div className=\"position\">{item.position}</div>\n              </div>\n            </div>\n          )\n        })}\n      </div>\n    </AnchorWrapper>\n  )\n}\n\nexport default memo(HotAnchor)\n","import React, { memo, ReactNode, useEffect } from 'react'\nimport type { FC } from 'react'\nimport {\n  fetchRankingDataAction,\n  /* fetchBannerDataAction,\n  fetchHotRecommendsAction,\n  fetchNewAlbumsAction, */\n  fetchRecommendDataAction\n} from './store/recommend'\nimport { useAppDispatch } from '@/store'\nimport TopBanner from './c-cpns/top-banner'\nimport { RecommendWrapper } from './style'\nimport HotRecommend from './c-cpns/hot-recommend'\nimport NewAlbum from './c-cpns/new-album'\nimport TopRanking from './c-cpns/top-ranking'\nimport UserLogin from './c-cpns/user-login'\nimport SettleSinger from './c-cpns/settle-singer'\nimport HotAnchor from './c-cpns/hot-anchor'\n\ninterface IProps {\n  children?: ReactNode\n}\nconst Recommend: FC<IProps> = () => {\n  /**发起action请求获取数据 */\n  const dispatch = useAppDispatch()\n  useEffect(() => {\n    dispatch(fetchRecommendDataAction())\n    dispatch(fetchRankingDataAction())\n\n    // dispatch(fetchBannerDataAction())\n    // dispatch(fetchHotRecommendsAction())\n    // dispatch(fetchNewAlbumsAction())\n  }, [])\n\n  // jsx render 函数的返回\n  return (\n    <RecommendWrapper>\n      <TopBanner />\n      <div className=\"content wrap-v2\">\n        <div className=\"left\">\n          <HotRecommend />\n          <NewAlbum />\n          <TopRanking />\n        </div>\n        <div className=\"right\">\n          <UserLogin />\n          <SettleSinger />\n          <HotAnchor />\n        </div>\n      </div>\n    </RecommendWrapper>\n  )\n}\n\nexport default memo(Recommend)\n"],"names":["discoverMenu","title","link","hotRadios","picUrl","name","position","url","BannerWrapper","styled","BannerLeft","require","BannerRight","href","target","BannerControl","TopBanner","bgImageUrl","useState","currentIndex","setCurrentIndex","bannerRef","useRef","banners","useAppSelector","state","recommend","shallowEqualApp","length","imageUrl","style","background","className","dots","autoplay","ref","beforeChange","afterChange","current","map","item","src","alt","typeTitle","index","classNames","active","onClick","prev","next","memo","RecommendWrapper","HeaderV1Wrapper","AreaHeaderV1","props","keywords","moreText","moreLink","to","MenuItemWrapper","SongMenuItem","itemData","getImageSize","formatCount","playCount","HotRecommend","hotRecommends","id","AlbumWrapper","AlbumItemWrapper","theme","mixin","textNoWrap","NewAlbumItem","artist","NewAlbum","newAlbums","speed","slice","album","RankingWrapper","RankingItemWrapper","TopRankingItem","tracks","dispatch","useAppDispatch","coverImgUrl","fetchCurrentSongAction","TopRanking","rankings","LoginWrapper","UserLogin","SingerWrapper","HeaderV2Wrapper","AreaHeaderV2","SettleSinger","settleSingers","alias","join","AnchorWrapper","HotAnchor","Recommend","useEffect","fetchRecommendDataAction","fetchRankingDataAction"],"sourceRoot":""}